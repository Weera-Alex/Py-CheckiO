type: checkiO
files:
- name: mission.py
  visible: true
  text: |
    def goes_after(word: str, first: str, second: str) -> bool:
        if first == second:
            return False
        if first not in word or second not in word:
            return False
        first_ind = word.index(first)
        second_ind = word.index(second)
        if  first_ind - second_ind == -1:
            return True
        return False



    print("Example:")
    print(goes_after("world", "w", "o"))

    assert goes_after("world", "w", "o") == True
    assert goes_after("world", "w", "r") == False
    assert goes_after("world", "l", "o") == False
    assert goes_after("panorama", "a", "n") == True
    assert goes_after("list", "l", "o") == False
    assert goes_after("", "l", "o") == False
    assert goes_after("list", "l", "l") == False
    assert goes_after("world", "d", "w") == False

    print("The mission is done! Click 'Check Solution' to earn rewards!")
  learner_created: false
status: Solved
code: |
  def goes_after(word: str, first: str, second: str) -> bool:
      if first == second:
          return False
      if first not in word or second not in word:
          return False
      first_ind = word.index(first)
      second_ind = word.index(second)
      if  first_ind - second_ind == -1:
          return True
      return False



  print("Example:")
  print(goes_after("world", "w", "o"))

  assert goes_after("world", "w", "o") == True
  assert goes_after("world", "w", "r") == False
  assert goes_after("world", "l", "o") == False
  assert goes_after("panorama", "a", "n") == True
  assert goes_after("list", "l", "o") == False
  assert goes_after("", "l", "o") == False
  assert goes_after("list", "l", "l") == False
  assert goes_after("world", "d", "w") == False

  print("The mission is done! Click 'Check Solution' to earn rewards!")
seconds_from_change: 8351
